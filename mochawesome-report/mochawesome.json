{
  "stats": {
    "suites": 4,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-14T21:57:53.833Z",
    "end": "2021-03-14T21:57:55.816Z",
    "duration": 1983,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8c7a5cbf-6364-4a40-87b5-ffe0c36f1ca9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2497686b-1d85-450c-a686-6d1f5c700d70",
          "title": "CREATE user",
          "fullFile": "/Users/elenavoitova/Documents/qa_automation/automationAPI/api-test-framework-js/tests/createUser.js",
          "file": "/tests/createUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user is created",
              "fullTitle": "CREATE user Verify user is created",
              "timedOut": false,
              "duration": 304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].post(URL, {\n  name: 'morpheus',\n  job: 'leader'\n}).inspectBody().expect('status', 201).expect('json', 'name', 'morpheus').expect('json', 'job', 'leader').expect('jsonTypes', '', {\n  'id': Joi.number().required(),\n  'name': Joi.string().required(),\n  'job': Joi.string().required(),\n  'createdAt': Joi.string().isoDate().required()\n}).then(function (res) {\n  userID.push(JSON.parse(res.body).id);\n  _chai.assert.isTrue((0, _timeHandler[\"default\"])(JSON.parse(res.body).createdAt), \"Update time isn't correct\");\n});",
              "err": {},
              "uuid": "5addfd97-2fc0-4ba1-8370-6874f39e0022",
              "parentUUID": "2497686b-1d85-450c-a686-6d1f5c700d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify create with empty body",
              "fullTitle": "CREATE user Verify create with empty body",
              "timedOut": false,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].post(URL, {}).expect('status', 201).then(function (res) {\n  userID.push(JSON.parse(res.body).id);\n  _chai.assert.isTrue((0, _timeHandler[\"default\"])(JSON.parse(res.body).createdAt), \"Update time isn't correct\");\n});",
              "err": {},
              "uuid": "fc2d7927-bc95-4664-b40a-b6849fb73592",
              "parentUUID": "2497686b-1d85-450c-a686-6d1f5c700d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify create with undefined parameters",
              "fullTitle": "CREATE user Verify create with undefined parameters",
              "timedOut": false,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].post(URL, {\n  name: undefined,\n  job: undefined\n}).expect('status', 201).then(function (res) {\n  userID.push(JSON.parse(res.body).id);\n  _chai.assert.isTrue((0, _timeHandler[\"default\"])(JSON.parse(res.body).createdAt), \"Update time isn't correct\");\n});",
              "err": {},
              "uuid": "2b881d79-8cab-4831-9bb4-97af3a9178e1",
              "parentUUID": "2497686b-1d85-450c-a686-6d1f5c700d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify create with empty parameters",
              "fullTitle": "CREATE user Verify create with empty parameters",
              "timedOut": false,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].post(URL, {\n  name: '',\n  job: ''\n}).expect('status', 201).then(function (res) {\n  userID.push(JSON.parse(res.body).id);\n  _chai.assert.isTrue((0, _timeHandler[\"default\"])(JSON.parse(res.body).createdAt), \"Update time isn't correct\");\n});",
              "err": {},
              "uuid": "6bff1362-0664-48f3-bdd3-d1b0d3140001",
              "parentUUID": "2497686b-1d85-450c-a686-6d1f5c700d70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5addfd97-2fc0-4ba1-8370-6874f39e0022",
            "fc2d7927-bc95-4664-b40a-b6849fb73592",
            "2b881d79-8cab-4831-9bb4-97af3a9178e1",
            "6bff1362-0664-48f3-bdd3-d1b0d3140001"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 786,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "ef2bc1d5-771b-4e75-bc71-ade872830d1b",
          "title": "GET user",
          "fullFile": "/Users/elenavoitova/Documents/qa_automation/automationAPI/api-test-framework-js/tests/deleteUser.js",
          "file": "/tests/deleteUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify existing user is deleted",
              "fullTitle": "GET user verify existing user is deleted",
              "timedOut": false,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"][\"delete\"](\"\".concat(URL, \"/\", 11)).inspectResponse().expect('status', 204);",
              "err": {},
              "uuid": "73beec38-e53c-4cff-858d-a54ab41b12b1",
              "parentUUID": "ef2bc1d5-771b-4e75-bc71-ade872830d1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify non-existent user",
              "fullTitle": "GET user verify non-existent user",
              "timedOut": false,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"][\"delete\"](\"\".concat(URL, \"/\", 13333)).inspectResponse().expect('status', 204);",
              "err": {},
              "uuid": "97bf155c-687b-4997-90c7-9d6f702b0bfe",
              "parentUUID": "ef2bc1d5-771b-4e75-bc71-ade872830d1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73beec38-e53c-4cff-858d-a54ab41b12b1",
            "97bf155c-687b-4997-90c7-9d6f702b0bfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 327,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "11a7061d-82c3-40b0-abff-ae4f5a87671b",
          "title": "GET user",
          "fullFile": "/Users/elenavoitova/Documents/qa_automation/automationAPI/api-test-framework-js/tests/getUser.js",
          "file": "/tests/getUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify existing user",
              "fullTitle": "GET user verify existing user",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].get(\"\".concat(URL, \"/\", 12)).expect('status', 200).expect('json', 'data.id', 12).expect('jsonTypes', 'data', {\n  'id': Joi.number().required(),\n  'email': Joi.string().email().required(),\n  'first_name': Joi.string().required(),\n  'last_name': Joi.string().required(),\n  'avatar': Joi.string().uri().required()\n});",
              "err": {},
              "uuid": "3c3422f5-462f-4c5c-9a7f-cd105425c90b",
              "parentUUID": "11a7061d-82c3-40b0-abff-ae4f5a87671b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify non-existent user",
              "fullTitle": "GET user verify non-existent user",
              "timedOut": false,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].get(\"\".concat(URL, \"/\", 13333)).expect('status', 404);",
              "err": {},
              "uuid": "93f2ec7d-edc6-461c-b313-fd95367fac05",
              "parentUUID": "11a7061d-82c3-40b0-abff-ae4f5a87671b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c3422f5-462f-4c5c-9a7f-cd105425c90b",
            "93f2ec7d-edc6-461c-b313-fd95367fac05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 200,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "2ab5fd7a-5353-4b90-88f8-7a61f90376af",
          "title": "UPDATE user",
          "fullFile": "/Users/elenavoitova/Documents/qa_automation/automationAPI/api-test-framework-js/tests/updateUser.js",
          "file": "/tests/updateUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user is updates",
              "fullTitle": "UPDATE user Verify user is updates",
              "timedOut": false,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "5362e847-21f0-4ab4-8332-15f874402d80",
              "parentUUID": "2ab5fd7a-5353-4b90-88f8-7a61f90376af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify update with empty body",
              "fullTitle": "UPDATE user Verify update with empty body",
              "timedOut": false,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].patch(\"\".concat(URL, \"/\", 12), {}).expect('status', 200).then(function (res) {\n  _chai.assert.isTrue((0, _timeHandler[\"default\"])(JSON.parse(res.body).updatedAt), \"Update time isn't correct\");\n});",
              "err": {},
              "uuid": "e390cda7-8467-4420-a448-1330cacc1445",
              "parentUUID": "2ab5fd7a-5353-4b90-88f8-7a61f90376af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify update with undefined parameters",
              "fullTitle": "UPDATE user Verify update with undefined parameters",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].post(\"\".concat(URL, \"/\", 12), {\n  name: undefined,\n  job: undefined\n}).expect('status', 201);",
              "err": {},
              "uuid": "210b7a6b-51ea-40f4-8c08-9566fc006458",
              "parentUUID": "2ab5fd7a-5353-4b90-88f8-7a61f90376af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify update with empty parameters",
              "fullTitle": "UPDATE user Verify update with empty parameters",
              "timedOut": false,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return _frisby[\"default\"].post(\"\".concat(URL, \"/\", 12), {\n  name: '',\n  job: ''\n}).expect('status', 201);",
              "err": {},
              "uuid": "a1e7e60c-5651-422a-b8ca-5ebb1e34a217",
              "parentUUID": "2ab5fd7a-5353-4b90-88f8-7a61f90376af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5362e847-21f0-4ab4-8332-15f874402d80",
            "e390cda7-8467-4420-a448-1330cacc1445",
            "210b7a6b-51ea-40f4-8c08-9566fc006458",
            "a1e7e60c-5651-422a-b8ca-5ebb1e34a217"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 649,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "autoOpen": "true"
      },
      "version": "5.2.0"
    }
  }
}